class Solution {
  public:
    // Function to build the tree from given inorder and preorder traversals
   Node*fun(int s,int e,int &indexPre,vector<int> &ino, vector<int> &pre,map<int,int>&mp)
  {
      if(s>e){
         return NULL; 
      }

       int rootVal = pre[indexPre++];
        Node* root = new Node(rootVal); // Create new node
        int x = mp[rootVal];   
        
      root->left=fun(s,x-1,indexPre,ino,pre,mp);
      root->right=fun(x+1,e,indexPre,ino,pre,mp);

      return root;
  }
    // Function to build the tree from given inorder and preorder traversals
    Node *buildTree(vector<int> &ino, vector<int> &pre) {
     int n=ino.size();
     if(n==0)return NULL;


     map<int,int>mp;
     for(int i=0;i<n;i++){
         mp[ino[i]]=i;
         }
         int indexPre=0;
    
     return  fun(0,n-1,indexPre,ino,pre,mp);
    }
};
